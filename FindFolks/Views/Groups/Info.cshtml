@model FindFolks.Models.GroupInfoModel
@{
    ViewBag.Title = Model.Group.GroupName;
}
<div class="row">
    <div class="col-md-12">
        @if (User.Identity.IsAuthenticated)
        {
            if (!Model.IsInGroup)
            {
                <div class="pull-right">
                    @using (Html.BeginForm("JoinGroup", "Groups", FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("GroupId", Model.Group.GroupId)
                        @Html.Hidden("UserId", Model.JoinGroup.UserId)
                        <button type="submit" class="btn btn-default">Join Group</button>
                    }
                </div>
            }
            else
            {
                <div class="pull-right">
                    @using (Html.BeginForm("LeaveGroup", "Groups", FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("GroupId", Model.Group.GroupId)
                        @Html.Hidden("UserId", Model.JoinGroup.UserId)
                        <button type="submit" class="btn btn-default">Leave Group</button>
                    }
                </div>
            }
        }
        <h2>@Model.Group.GroupName</h2>
        <h4>@Model.Group.GroupDescription</h4>
        <h4>Created by @Model.GroupCreator</h4>
        @if (Model.IsInGroup)
        {
            var RatingString = "";
            if (Model.RatingString != "N/A")
            {
                var fullStarsNum = (int)Math.Floor(Model.Rating);
                var halfStarNum = Model.Rating - Math.Floor(Model.Rating) >= 0.5 ? 1 : 0;
                var emptyStarsNum = 5 - fullStarsNum;
                var fullStars = String.Concat(Enumerable.Repeat("<i class=\"fa fa-star fa-fw\"></i>", fullStarsNum));
                var halfStar = String.Concat(Enumerable.Repeat("<i class=\"fa fa-star-half-o fa-fw\"></i>", halfStarNum));
                var emptyStars = String.Concat(Enumerable.Repeat("<i class=\"fa fa-star-o fa-fw\"></i>", emptyStarsNum));
                RatingString = fullStars + halfStar + emptyStars;
            }
            else
            {
                RatingString = "N/A";
            }

            <h4>Average rating of events for the last week: @Html.Raw(RatingString)</h4>
        }
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Members</h3>
            </div>
            <div class="list-group">
                @foreach (var u in Model.Members)
                {
                    <a href="@Url.Action("Index", "User", new { Id = u.UserName })" class="list-group-item">
                        @if (u.Authorized)
                        {
                            <span class="pull-right"><i class="fa fa-star fa-fw"></i></span>
                        }
                        <h4 class="list-group-item-heading">@u.LastName, @u.FirstName</h4>
                        <p class="list-group-item-text">@u.UserName</p>
                    </a>
                }
            </div>
        </div>
        
    </div>
    <div class="col-md-8">
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Events @if (Model.Authorized){<span class="pull-right"><button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#CreateEventModal"><i class="fa fa-pencil fa-fw"></i> Create event</button></span>}</h3>
            </div>
            @if (Model.Events != null && Model.Events.Count() != 0)
            {
                <div class="list-group">
                    @foreach (var e in Model.Events)
                    {
                        <a href="@Url.Action("Info", "Events", new { Id = e.Id })" class="list-group-item">
                            <h4 class="list-group-item-heading">@e.Title <small>#@e.Id</small><span class="pull-right"><i class="fa fa-angle-right fa-fw"></i></span></h4>
                            <p class="list-group-item-text"><i class="fa fa-calendar fa-fw"></i> @e.Start.ToString()</p>
                            <p class="list-group-item-text"><i class="fa fa-info-circle fa-fw"></i> @e.Description</p>
                            <p class="list-group-item-text"><i class="fa fa-map-pin fa-fw"></i> @e.Location in @e.ZipCode</p>
                            <p class="list-group-item-text"><i class="fa fa-group fa-fw"></i> @e.GroupName</p>
                        </a>
                    }
                </div>
            }
            else
            {
                <div class="panel-body">
                    <p>There are currently no events scheduled.</p>
                </div>
            }
        </div>
    </div>
</div>

@if (Model.Authorized)
{
    <div class="modal fade" id="CreateEventModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Create event for @Model.Group.GroupName</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("CreateEvent", "Groups", new { GroupId = Model.Group.GroupId })
                </div>
            </div>
        </div>
    </div>
}